package vsoc;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.io.Serializable;import vsoc.nn.base.LayerNode;import vsoc.nn.base.Synapse;import vsoc.nn.base.Weighter;import junit.framework.Test;import junit.framework.TestCase;import junit.framework.TestSuite;/** * Testcases. */public class SynapseTest extends TestCase {    Synapse s1, s2, s3, s4, s5;    LayerNode ln1, ln2, ln3;    public SynapseTest(String s) {        super(s);    }    /**     * Writes an object to a file and reads it afterwards. Can be used to verify     * if a specific object is serializable. The name of this file is always     * Serializable.object.     *      * @param sIn     *            The object.     * @return The object that was read from the file.     * @exception ClassNotFoundException     *                If the correponding class cannot be found at read time.     */    public Serializable writeAndRead(Serializable sIn) throws IOException,            ClassNotFoundException {        FileOutputStream fos;        FileInputStream fis;        ObjectOutputStream oos;        ObjectInputStream pi;        String file = "Serializable.object";        Serializable sOut;        fos = new FileOutputStream(file);        oos = new ObjectOutputStream(fos);        oos.writeObject(sIn);        oos.flush();        fos.close();        fis = new FileInputStream(file);        pi = new ObjectInputStream(fis);        sOut = (Serializable) pi.readObject();        fis.close();        return sOut;    }    public static Test suite() {        TestSuite s = new TestSuite();        s.addTest(new SynapseTest("testEquals"));        s.addTest(new SynapseTest("testSerial00"));        s.addTest(new SynapseTest("testSerial01"));        return s;    }    protected void setUp() {        Weighter w = new Weighter((float) 0.1, (float) 1.5);        this.ln1 = new LayerNode((short) 5);        this.ln2 = new LayerNode((short) 6);        this.ln3 = new LayerNode((short) 8);        this.s1 = new Synapse(w);        this.s2 = new Synapse(w);        this.s3 = new Synapse(w);        this.s4 = new Synapse(w);        this.s5 = new Synapse(w);        this.s1.setWeight((short) 0);        this.s2.setWeight((short) 1);        this.s3.setWeight((short) 6);        this.s4.setWeight((short) -6);        this.s5.setWeight((short) 0);        this.s5.connectLayerNode(this.ln1);    }    public void testEquals() {        assertTrue(this.s1.equals(this.s1));        assertTrue(!this.s1.equals(this.s2));        assertTrue(!this.s1.equals(this.s3));        assertTrue(!this.s1.equals(this.s4));        assertTrue(this.s1.equals(this.s5));        assertTrue(!this.s3.equals(this.s4));    }    public void testSerial00() throws IOException, ClassNotFoundException {        FileOutputStream ostream;        FileInputStream istream;        ObjectOutputStream po;        ObjectInputStream pi;        String file = "Synapse.object";        Synapse s11;        Synapse s12;        Synapse s13;        Synapse s14;        Synapse s15;        ostream = new FileOutputStream(file);        po = new ObjectOutputStream(ostream);        po.writeObject(this.s1);        po.writeObject(this.s2);        po.writeObject(this.s3);        po.writeObject(this.s4);        po.writeObject(this.s5);        po.flush();        ostream.close();        istream = new FileInputStream(file);        pi = new ObjectInputStream(istream);        s11 = (Synapse) pi.readObject();        s12 = (Synapse) pi.readObject();        s13 = (Synapse) pi.readObject();        s14 = (Synapse) pi.readObject();        s15 = (Synapse) pi.readObject();        istream.close();        assertTrue(s11.equals(this.s1));        assertTrue(s12.equals(this.s2));        assertTrue(s13.equals(this.s3));        assertTrue(s14.equals(this.s4));        assertTrue(s15.equals(this.s5));    }    public void testSerial01() throws IOException, ClassNotFoundException {        Synapse s1;        Object s2;        s1 = new Synapse();        s1.setWeight((short) 12);        s2 = writeAndRead(s1);        assertTrue(s1.equals(s2));    }}